# Модуль Input_Data
# модуль группирует функции ввода данных с фильтрацией неправильного ввода


# ---------------------------input_choice-----------------------------------------------------------------------------
def input_choice() -> str:
    """функция ввода выбора типа файла с защитой от неправильного ввода"""
    inp = input(
        """\033[4mПрограмма:\033[0m Привет! Добро пожаловать в программу работы с банковскими транзакциями.
           Выберите необходимый пункт меню:
             1. Получить информацию о транзакциях из JSON-файла
             2. Получить информацию о транзакциях из CSV-файла
             3. Получить информацию о транзакциях из XLSX-файла \n\033[4mПользователь:\033[0m """
    )
    while True:
        if inp.isdigit():
            i = int(inp)
            if i == 1:
                ch = "JSON"
                break
            elif i == 2:
                ch = "CSV"
                break
            elif i == 3:
                ch = "XLSX"
                break
            else:
                print("\033[4mПрограмма:\033[0m Неправильный ввод, сделайте правильный выбор")
                inp = input("\033[4mПользователь:\033[0m ")
        else:
            print("\033[4mПрограмма:\033[0m Неправильный ввод, сделайте правильный выбор")
            inp = input("\033[4mПользователь:\033[0m ")
    return ch


# ------------------------------input_state--------------------------------------------------------------------------
def input_state() -> str:
    """функция ввода выбора статуса операции с защитой от неправильного ввода"""
    inp = input(
        """\033[4mПрограмма:\033[0m Введите статус, по которому необходимо выполнить фильтрацию.
           Доступные cтатусы: EXECUTED, CANCELED, PENDING\n\033[4mПользователь:\033[0m """
    )
    while True:
        if inp.isalpha():
            i = inp.upper()
            if i == "EXECUTED":
                st = "EXECUTED"
                break
            elif i == "CANCELED":
                st = "CANCELED"
                break
            elif i == "PENDING":
                st = "PENDING"
                break
            else:
                print(f"\033[4mПрограмма:\033[0m Статус операции {inp} недоступен, сделайте правильный выбор")
                inp = input("\033[4mПользователь:\033[0m ")
        else:
            print(f"\033[4mПрограмма:\033[0m Статус операции {inp} недоступен, сделайте правильный выбор")
            inp = input("\033[4mПользователь:\033[0m ")
    return st


# ---------------------------------input_sort_dat---------------------------------------------------------------------
def input_sort_date() -> list:
    """функция выбора сортировки даты с защитой от неправильного ввода"""
    st = []
    inp = input("""\033[4mПрограмма:\033[0m Отсортировать операции по дате? Да/Нет \n\033[4mПользователь:\033[0m """)
    while True:
        if inp.isalpha():
            i = inp.lower()
            if i == "да":
                st.append(True)
                break
            elif i == "нет":
                st.append(False)
                break
            else:
                print(f"\033[4mПрограмма:\033[0m Ошибочный ввод, {inp} недоступен, сделайте правильный выбор")
                inp = input("\033[4mПользователь:\033[0m ")
        else:
            print(f"\033[4mПрограмма:\033[0m Ошибочный ввод, {inp} недоступен, сделайте правильный выбор")
            inp = input("\033[4mПользователь:\033[0m ")
    if st[0]:
        inp = input(
            """\033[4mПрограмма:\033[0m Отсортировать по возрастанию или по убыванию?\n\033[4mПользователь:\033[0m """
        )
        while True:
            inp_l = inp.lower()
            index_1 = inp_l.find("возрастанию")
            index_2 = inp_l.find("убыванию")
            if index_1 != -1:
                st.append(False)
                break
            elif index_2 != -1:
                st.append(True)
                break
            else:
                print("\033[4mПрограмма:\033[0m Ошибочный ввод, {inp} недоступен, сделайте правильный выбор")
                inp = input("\033[4mПользователь:\033[0m ")
    return st


# --------------------------------input_sort_currency----------------------------------------------------------------
def input_sort_currency() -> bool:
    """функция выбора сортировки вида валюты с защитой от неправильного ввода"""
    inp = input(
        """\033[4mПрограмма:\033[0m Выводить только рублевые транзакции? Да/Нет\n\033[4mПользователь:\033[0m """
    )
    while True:
        if inp.isalpha():
            i = inp.lower()
            if i == "да":
                st = True
                break
            elif i == "нет":
                st = False
                break
            else:
                print(f"\033[4mПрограмма:\033[0m Ошибочный ввод, {inp} недоступен, сделайте правильный выбор")
                inp = input("\033[4mПользователь:\033[0m ")
        else:
            print(f"\033[4mПрограмма:\033[0m Ошибочный ввод, {inp} недоступен, сделайте правильный выбор")
            inp = input("\033[4mПользователь:\033[0m ")
    return st


# -----------------------------------input_desc----------------------------------------------------------------------
def input_descr() -> list:
    """функция выбора сортировки по слову в описании с защитой от неправильного ввода"""
    st = []
    inp = input(
        """\033[4mПрограмма:\033[0m Отфильтровать список транзакций по определенному слову в описании? Да/Нет\n
    \033[4mПользователь:\033[0m """
    )
    while True:
        if inp.isalpha():
            i = inp.lower()
            if i == "да":
                st.append(i)
                break
            elif i == "нет":
                st.append(i)
                break
            else:
                print(f"\033[4mПрограмма:\033[0m Ошибочный ввод, {inp} недоступен, сделайте правильный выбор")
                inp = input("\033[4mПользователь:\033[0m ")
        else:
            print(f"\033[4mПрограмма:\033[0m Ошибочный ввод, {inp} недоступен, сделайте правильный выбор")
            inp = input("\033[4mПользователь:\033[0m ")
    if st[0] == "да":
        inp = input("""\033[4mПрограмма:\033[0m Введите слово для поиска: \n\033[4mПользователь:\033[0m """)
        st.append(inp)
    return st
